# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Code checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: file permission
      run: chmod +755 ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build test --build-cache --stacktrace
   
    #- name: cat index file
    #  run: ls -lRah build && cat ./build/reports/tests/test/index.html

    #- name: Global variables
    #  run: git config --system -l

    #- name: Repository variables
    #  run: git config -l

    - name: GITHUB variables
      run: echo $GITHUB_ENV

    # Put current date into a variable to append to Artifact zip file
    - name: Dynamically set PRESENT_TIME environment variable
      run: echo "PRESENT_TIME=$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_ENV

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: artifact-Wildcard-${{ env.PRESENT_TIME }}
        path: ./build/**/*.jar
        if-no-files-found: warn
        retention-days: 1
        compression-level: 4
        overwrite: false

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: dependancy-checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: file permission
      run: chmod +755 ./gradlew
      
    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
